{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _logger = require('../logger');\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar logger = new _logger2.default('Subscriber');\n\nvar Subscriber = function () {\n  function Subscriber(channel, noticeHandler) {\n    _classCallCheck(this, Subscriber);\n\n    this.channel = channel;\n    this.noticeHandler = noticeHandler;\n    this.cursor = -1;\n  }\n\n  _createClass(Subscriber, [{\n    key: 'notify',\n    value: function notify() {\n      var events = this.channel.poll(this.cursor);\n      this.cursor = this.channel.cursor;\n\n      if (events.length > 0) {\n        for (var i = 0; i < events.length; i++) {\n          this._notifyEvent(events[i]);\n        }\n      }\n    }\n  }, {\n    key: '_notifyEvent',\n    value: function _notifyEvent(event) {\n      var _this = this;\n\n      try {\n        return new Promise(function (resolve, reject) {\n          _this.noticeHandler(event, _this.channel.name);\n\n          resolve();\n        });\n      } catch (e) {\n        logger.error('notify event error', e, event, this.noticeHandler);\n      }\n    }\n  }]);\n\n  return Subscriber;\n}();\n\nexports.default = Subscriber;","map":null,"metadata":{},"sourceType":"script"}