{"ast":null,"code":"import _classCallCheck from \"/var/www/html/react/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/react/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/react/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/react/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/react/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/html/react/my-app/src/component/Validation.js\";\nimport React, { Component } from 'react';\n\nvar Validation =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Validation, _React$Component);\n\n  function Validation(props) {\n    var _this;\n\n    _classCallCheck(this, Validation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Validation).call(this, props));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var username = _this.refs.username.value;\n      var password = _this.refs.password.value;\n\n      var errors = _this.handleValidation(username, password);\n\n      if (errors.length > 0) {\n        _this.setState({\n          errors: errors\n        });\n\n        return;\n      }\n    };\n\n    _this.handleValidation = function (username, password) {\n      if (username.length === 0) {\n        alert('Username cannot be empty');\n      }\n\n      if (username.length === 0) {\n        alert('Username cannot be empty');\n      }\n\n      return false;\n    };\n\n    _this.state = {\n      errors: []\n    };\n    return _this;\n  }\n\n  _createClass(Validation, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Username:\"), React.createElement(\"input\", {\n        type: \"text\",\n        ref: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Password:\"), React.createElement(\"input\", {\n        type: \"text\",\n        ref: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return Validation;\n}(React.Component);\n\nexport default Validation;","map":{"version":3,"sources":["/var/www/html/react/my-app/src/component/Validation.js"],"names":["React","Component","Validation","props","handleSubmit","e","preventDefault","username","refs","value","password","errors","handleValidation","length","setState","alert","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,U;;;;;AACF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,oFAAMA,KAAN;;AADiB,UAOnBC,YAPmB,GAOJ,UAACC,CAAD,EAAO;AACpBA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,QAAQ,GAAG,MAAKC,IAAL,CAAUD,QAAV,CAAmBE,KAApC;AACA,UAAMC,QAAQ,GAAG,MAAKF,IAAL,CAAUE,QAAV,CAAmBD,KAApC;;AACA,UAAME,MAAM,GAAG,MAAKC,gBAAL,CAAsBL,QAAtB,EAAgCG,QAAhC,CAAf;;AAEA,UAAIC,MAAM,CAACE,MAAP,GAAgB,CAApB,EAAuB;AACrB,cAAKC,QAAL,CAAc;AAAEH,UAAAA,MAAM,EAANA;AAAF,SAAd;;AACA;AACD;AACF,KAjBkB;;AAAA,UAmBnBC,gBAnBmB,GAmBA,UAACL,QAAD,EAAWG,QAAX,EAAwB;AACzC,UAAIH,QAAQ,CAACM,MAAT,KAAoB,CAAxB,EAA2B;AACzBE,QAAAA,KAAK,CAAC,0BAAD,CAAL;AACD;;AACD,UAAIR,QAAQ,CAACM,MAAT,KAAoB,CAAxB,EAA2B;AACzBE,QAAAA,KAAK,CAAC,0BAAD,CAAL;AACD;;AAED,aAAO,KAAP;AACD,KA5BkB;;AAEjB,UAAKC,KAAL,GAAa;AACXL,MAAAA,MAAM,EAAE;AADG,KAAb;AAFiB;AAKlB;;;;6BAyBQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,QAAQ,EAAE,KAAKP,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,GAAG,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,GAAG,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CALF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CATF,CADF,CADF;AAiBD;;;;EAjDoBJ,KAAK,CAACC,S;;AAoD7B,eAAeC,UAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Validation extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        errors: []\n      };\n    }\n  \n    handleSubmit = (e) => {\n      e.preventDefault();\n      const username = this.refs.username.value;\n      const password = this.refs.password.value;\n      const errors = this.handleValidation(username, password);\n  \n      if (errors.length > 0) {\n        this.setState({ errors });\n        return;\n      }\n    };\n  \n    handleValidation = (username, password) => {\n      if (username.length === 0) {\n        alert('Username cannot be empty');\n      }\n      if (username.length === 0) {\n        alert('Username cannot be empty');\n      }\n      \n      return false;\n    };\n  \n    render() {\n      return (\n        <div>\n          <form onSubmit={this.handleSubmit}>\n            <div>\n              <label>Username:</label>\n              <input type=\"text\" ref=\"username\" />\n            </div>\n            <div>\n              <label>Password:</label>\n              <input type=\"text\" ref=\"password\" />\n            </div>\n            <div>\n              <button>Submit</button>\n            </div>\n          </form>\n        </div>\n      );\n    }\n  }\n\n  export default Validation;"]},"metadata":{},"sourceType":"module"}